== Software Metrics ==

As of 2009-July-16 at 18:51 PM (r1754)

(Gathered via loc at http://freshmeat.net/projects/loc/)
|| Pure Source || Comment || Source followed by Comment || Blank || 
|| 15435 || 7099 || 80 || 5764 ||
Total lines of code: 28378

(Gathered via Eclipse Metrics plugin at http://metrics.sourceforge.net/)
|| Classes || Methods || Attributes ||
|| 227 || 1433 || 630 ||

Test cases (methods in test classes): 317

== New Tutorial ==

[http://sites.google.com/site/parrotimhelp/index How to Create A Profile]

== Testing ==

To validate our product, we did the following phases:

== Unit Testing ==
We used Eclipse 3.4.2 and JUnit 4.0 to write our test cases.
To see our results you have two options:

*1. Import from SVN*

a) Download Eclipse 3.4.2

b) Open Eclipse

c) Select Help tab

d) Go to Software update

e) Import from following site: http//subclipse.tigirs.org/update1_4x (if you don't have SVN downloaded yet)

f) Download required and recommended features (you can have a problem with downloading optional features) then just go on until it's downloaded

g) Select File tab

h) Select import

i) Select SVN and import repesitory

j) Import from the site: https//parrot-im.googlecode.com/svn/trunk

k) Download parrot-im

l) Run test cases in unit test, integration test, and beta test.

*2. Copy paste*

a) Download eclipse 3.4.2

b) Download JUnit 4.0 (include http)

c) Copy test cases into eclipse and run tests.

All the test cases have successfully passed the test. We test most of the code using JUnit but some of the code wasn't tested or the test isn't completed and I include the reason for each one:

*DatabaseFunctions:* We had problems testing it by JUnit, and we couldn't figure out the reason. So, we included database testing in the integration test phase.

*GUI, sounds, Spell checker and Dictionary:* It's more difficult to test those classes using unit testing. So, we tested this by integration and manual testing.

== Reports from JUnit test cases  ==

Here are three examples for result we got from JUnit testing:

[http://parrot-im.googlecode.com/files/Untitled.jpg]

[http://parrot-im.googlecode.com/files/Untitled2.jpg]

[http://parrot-im.googlecode.com/files/Untitled3.jpg]


The green line indicate and green labels on the methods means that methods,(or when also the test case are labeled green) are successful and have no errors according to test case alogrithms. If the test case are labeled blue this means there are an error according to test case (mostly logical) for example in our DatabasefunctionsTest, it gives failure to some functions eventhough it works in practice (that's why we didn't fully implemented DatabaseFunctionsTest). When methods are labeled red, this means there are an error in processing the function itself (syntax error, initialization error) and complier stops the testing for the method in this case. 

== Integration Testing ==

In this phase, we tried to make sure that everything works well practically. This include testing that:

1. All the features are working fine, without any crashes

2. Database retuns correct data

3. GUI don't have any inconsistent problems

We did the testing, by doing tasks typicall users do. We put a table that include tasks, observations on testing the task, and the expected output based on our features document:

|| *Task* || *Observation* || *Expected result* ||
|| Sign in || It takes around 10 s to login || User able to sign in within ()||
|| Sign out || There was no problem with that || User able to sign out within ()||
|| Sign out, Sign in again || See know bugs || User able to sign in and out multiple times ||
|| Add user || Need to be tested || When adding a friend, it takes () ||
|| Remove user || See posible problems || User have no problem removing a user, and friend will be removed from database ||
|| Block a friend || See know bugs || Need to be discussed ||
|| Unblock a friend || See known bugs || You can block, and unblock a friend ||
|| View Chat log || See known bugs || You can view chatlog, and search conversations ||
|| Connected friends || Inconsistent number || Number of connected friends should be consistent ||
|| Change states || There was no problem changing states (check on chatty) || should I delete this column ||
|| Change avator picture || Need to be tested || ||
|| Chat with a friend || There was no problem with that || ||
|| Press Enter to send || It takes around 2 seconds to process that ||  ||

== User Interface Testing ==

We included this test with user accptance test. It tests our product in how:

1. It uses terms that is easy for the user to comprehend

2. Interface is consistent, that's it do similar things for similar operations

3. It's minimal, it doesn't do surprise the user. It do what the user expect it to do.

4. User can recover from errors such as blocking a friend, or removing a friend by mistake

5. It provide help and warnings to the user such as Help tab

6. The user can interact with the interface the way he/she prefer

Observations on User Interface:



== User Acceptance Testing ==
We asked the following 20 users to test our product and do the following tasks, and that by observing them while they talk about the problems with the interface(Natural observation). Here are the tasks:

1. Sign in and out

2. Add a friend, "cmpt275testing"

3. Block a friend

4. Unblock a friend

5. Remove a friend

6. Add the removed friend

7. Search for a user "cmpt275testing" in your search bar

8. Send a message

9. See if friend is typing and wait for the message

10. Change your avatour picture, state and statues

11. Other user will tell you if you change it

12. Enalbe Chatbot and "cmpt275testing" will talk to your chatbot

13. Disable chatbot and talks to "cmpt275testing"'s chatbot

14. Go to help

This is list of some of the users who used our realese version beta:

=== Jenny Bits (Elementary Student) ===
  * *Age:* 10
  * *Gender:* Female
  * *Education:* Grade 4 Elementary School.
  * *Experience:* Familiar with a simple chat program.
  * *Expertise:*
    * Operate computer equipment. 
  * *Goal:* 
    *Wants to communicate with her friends online. 
    *Wants to learn new words or proper spelling to words through the spellcheck function.
    *Wants to use the cool fonts and emoticons that she can use in her chats.
  * *Assumptions:* 
    * Ability to operate basic applications on her personal computer in Windows OS. 
    * Ability to operate a keyboard and a mouse.
    * Knowledgeable about how to create an account with a password.
    * Has a home network connection available.

=== Phyllis Lin (University Student) ===
  * *Age:* 19
  * *Gender:* Female
  * *Education:* First Year Computing Science student
  * *Experience:* Familiar with Windows Live Messenger.
  * *Expertise:* 
    * Operate and maintain computer equipment. 
    * Ability to customize systems according to her specific needs. 
  * *Goal:* 
    * Wants to communicate with her friends effortlessly and effectively. 
    * Does not want to spend the time to open multiple programs to track down her friends. 
    * Wants to use the search function to find her contacts or important details from previous conversations. 
    * Wants to use a simple and clean user interface to boost her productivity.
  * *Assumptions:* 
    * Ability to operate basic applications on her personal computer in Windows OS. 
    * Ability to operate a keyboard and a mouse.
    * Knowledgeable about how to create an account with a password.
    * Knowledgeable about how to search for information using a keyword.
    * Has a home network connection available.

=== Tim Bucks (Teaching Assistant) ===
  * *Age:* 27
  * *Gender:* Male
  * *Education:* Master's Degree in Computer Science.
  * *Experience:* Familiar with many different chat programs.
  * *Expertise:* 
    * Operate and repair computer equipment. 
    * Ability to write and test computer programs in major programming languages. 
    * Four years troubleshooting experience and extensive knowledge of web server and database.
  * *Goal:* 
    * Wants to maintain and update programs. 
    * Wants to rely on multiple-network functionality.
    * Does not want to spend the time to open multiple programs to track down his friends. 
    * Wants to employ chatbot to send different messages to his different groups of contacts while he is away.
    * Wants to use slash-commands to boost his messaging experience.
  * *Assumptions:* 
    * Ability to operate most of applications on his personal computer in Windows, Linux, and Mac OS. 
    * Ability to operate a keyboard and a mouse.
    * Knowledgeable about how to create an account with a secure password.
    * Knowledgeable about slash-commands in different Operating Systems.
    * Occasionally busy having TA's office hours during exam periods.
    * Has a home network connection available.

=== James Power (Third Party Developer) ===
  * *Age:* 39
  * *Gender:* Male
  * *Education:* PhD in Computer Science.
  * *Experience:* Recently created a new chat client protocol.
  * *Expertise:* 
    * Operate and repair computer equipment. 
    * Ability to write and test computer programs in major programming languages. 
    * Many experience with software engineering process. 
    * Three years of experience in web server and database development.
  * *Goal:* 
    * Wants to adapt his own existing protocol to plugin to Parrot IM system with minimal modification. 
    * Wants to expand Parrot IM on multiple-network functionality.
  * *Assumptions:* 
    * Ability to operate most of applications on his personal computer in Windows, Linux, and Mac OS. 
    * Ability to operate a keyboard and a mouse.
    * Knowledgeable about how to create an account with a secure password.
    * Knowledgeable about a plug-in to interact with a host application.
    * Has a home network connection available.

=== Linda Bytes (Grandmother) ===
  * *Age:* 71
  * *Gender:* Female
  * *Education:* Bachelor's Degree in English.
  * *Experience:* Familiar with a simple chat program.
  * *Expertise:* 
    * Operate computer equipment. 
  * *Goal:* 
    * Wants to communicate with her grandchildren online. 
    * Wants to see pictures of her grandchildren.
    * Wants to use a simple and easy to navigate chat program's interface.
  * *Assumptions:* 
    * Ability to operate basic applications on her personal computer in Mac OS X. 
    * Ability to operate a keyboard and a mouse.
    * Knowledgeable about how to create an account with a password.
    * Has a home network connection available.

------------------------------------------------------------------------------------

Observations on the application entirly:

== Known Bugs and problems ==

*Unblocking*: We didn't implement the feature to unblock a person.

*Delete blocked friend*:

*Chat log search*:

*Buddy list*:

== Possible problems in the application ==

*Sign in, then out*: When you sign in, and out multiple times, sometime you may have a problem signing in and you need to press (sign in) button twice.



== Features Not implemented ==